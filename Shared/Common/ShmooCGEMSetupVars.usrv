Version 1.0;

UserVars ShmooExperimentSetup
{
	String ShmooExperimentName = "Shmoo";
	String ShmooDomainName = "IACore";

}

UserVars VfCurveSetupVars
{
	String VoltageName = "Voltage";
	String FrequencyName = "Frequency";
}

UserVars ShmooParam
{
	Boolean IsPostScrubEnabled = False;
	Boolean IsSearchSSFEnabled = False;

	String ShmooLimiterDestination = nameof(ShmooParam.SweetSpotLimiters);
	Array<ShmooLineLimiter> SweetSpotLimiters = null;
	Array<ShmooLineLimiter> PostScrubLimiters = null;
}

UserVars ShmooAxesSetupVars
{
	Array<ShmooAxis> IACoreShmooAxes = [
         ShmooAxes.FrequencyAxis,
		 ShmooAxes.TemperatureAxis,
		 ShmooAxes.VoltageAxis
		];	
}

UserVars ShmooAxes
{
#
#	ShmooAxis AVXModeAxis =
#	{
#	
#		AxisName = AVXModeVars.AxisName;
#				AxisCoordinates = 
#				[ 
#					{ 
#						IsActive = True; 
#						Values = AVXModeVars.ListOfValues;
#						Step = AVXModeVars.Step;
#						StopOn = AVXModeVars.StopOn;
#					}
#				];
#				AxisSetupFlowExitPort = AVXModeVars.AxisExitPort;
#				AxisValueToSet = nameof(AVXModeVars.AxisCurrentValue);
#				AxisSetupPassed = nameof(AVXModeVars.AxisPointSetup);
#				AxisMaxAllowedStopPoints = AVXModeVars.AxisMaxAllowedStopPoints;	
#				AxisMaxAllowedConsecutiveStopPoints = AVXModeVars.AxisMaxAllowedConsecutiveStopPoints;
#		};

	ShmooAxis FrequencyAxis = {
				AxisName = FrequencyVars.AxisName;
				AxisCoordinates = 
				[ 
					{ 
						IsActive = True;
						Values = FrequencyVars.ListOfValues;
						Step = FrequencyVars.Step;
						StopOn = FrequencyVars.StopOn;
					}
					
				];

				# -- debug -- #
				#AxisDependsOn = [AVXModeVars.AxisName];
				# -- debug -- #
				AxisSetupFlowExitPort = FrequencyVars.AxisExitPort;
				AxisValueToSet = nameof(FrequencyVars.AxisCurrentValue);
				AxisSetupPassed = nameof(FrequencyVars.AxisPointSetup);
				#AxisSafeRegion=[FrequencyVars.SafeRegionMinValue,FrequencyVars.SafeRegionMaxValue];
				AxisMaxAllowedStopPoints = FrequencyVars.AxisMaxAllowedStopPoints;	
				AxisMaxAllowedConsecutiveStopPoints = FrequencyVars.AxisMaxAllowedConsecutiveStopPoints;
	};

	ShmooAxis TemperatureAxis = {
			AxisName = TemperatureVars.AxisName;
			AxisCoordinates = 
			[ 
				{ 
					IsActive = True; 
					Values = TemperatureVars.ListOfValues;
					Step = TemperatureVars.Step;
					StopOn = TemperatureVars.StopOn;
				}
			];
			AxisSetupFlowExitPort = TemperatureVars.AxisExitPort;
			AxisValueToSet = nameof(TemperatureVars.AxisCurrentValue);
			AxisSetupPassed = nameof(TemperatureVars.AxisPointSetup);
			#AxisSafeRegion=[TemperatureVars.SafeRegionMinValue,TemperatureVars.SafeRegionMaxValue];
			AxisMaxAllowedStopPoints = TemperatureVars.AxisMaxAllowedStopPoints;	
			AxisMaxAllowedConsecutiveStopPoints = TemperatureVars.AxisMaxAllowedConsecutiveStopPoints;
	};

	ShmooAxis VoltageAxis = {
			AxisName = VoltageVars.AxisName;
			AxisCoordinates = 
			[ 
				{ 
					IsActive = ShmooParam.IsPostScrubEnabled == False  && FrequencyVars.AxisCurrentValue == "8"; 
					Values = [IAVoltageSetup.MaxVoltageCR_8,IAVoltageSetup.MinVoltage];
					Step = VoltageVars.Step;
					StopOn = VoltageVars.StopOn;
				},
				{ 
					IsActive = ShmooParam.IsPostScrubEnabled == False  &&  FrequencyVars.AxisCurrentValue == "16"; 
					Values = [IAVoltageSetup.MaxVoltageCR_16,IAVoltageSetup.MinVoltage];
					Step = VoltageVars.Step;
					StopOn = VoltageVars.StopOn;
				},
				{ 
					IsActive = ShmooParam.IsPostScrubEnabled == False  &&  FrequencyVars.AxisCurrentValue == "20"; 
					Values = [IAVoltageSetup.MaxVoltageCR_20,IAVoltageSetup.MinVoltage];
					Step = VoltageVars.Step;
					StopOn = VoltageVars.StopOn;
				},
				{ 
					IsActive = ShmooParam.IsPostScrubEnabled == False  &&  FrequencyVars.AxisCurrentValue == "30"; 
					Values = [IAVoltageSetup.MaxVoltageCR_30, IAVoltageSetup.MinVoltage];
					Step = VoltageVars.Step;
					StopOn = VoltageVars.StopOn;
				},
				{ 
					IsActive = ShmooParam.IsPostScrubEnabled == False  && FrequencyVars.AxisCurrentValue == "40"; 
					Values = [IAVoltageSetup.MaxVoltageCR_40,IAVoltageSetup.MinVoltage];
					Step = VoltageVars.Step;
					StopOn = VoltageVars.StopOn;
				},
				{ 
					IsActive = ShmooParam.IsPostScrubEnabled == False  && FrequencyVars.AxisCurrentValue == "48"; 
					Values = [IAVoltageSetup.MaxVoltageCR_48,IAVoltageSetup.MinVoltage];
					Step = VoltageVars.Step;
					StopOn = VoltageVars.StopOn;
				},
				{ 
					IsActive = ShmooParam.IsPostScrubEnabled; 
					Offset = [IAPostScrubSetup.MinOffsetPostScrub, IAPostScrubSetup.MaxOffsetPostScrub];
					Step = VoltageVars.Step;
					StopOn = VoltageVars.StopOn;
				}
			];
			AxisSetupFlowExitPort = VoltageVars.AxisExitPort;
			AxisValueToSet = nameof(VoltageVars.AxisCurrentValue);
			AxisSetupPassed = nameof(VoltageVars.AxisPointSetup);
			AxisMaxAllowedStopPoints = VoltageVars.AxisMaxAllowedStopPoints;	
			AxisMaxAllowedConsecutiveStopPoints = VoltageVars.AxisMaxAllowedConsecutiveStopPoints;
	};

}

